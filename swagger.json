{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Quién Me Debe API Rest",
    "description": "API Rest of Quién Me Debe application.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/unauthorized": {
      "get": {
        "tags": ["Root"],
        "produces": ["application/json"],
        "responses": {
          "401": {
            "description": "Authorization information is missing or invalid.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code",
                  "enum": ["UNAUTHORIZED"]
                },
                "message": {
                  "type": "string",
                  "description": "Error description"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "description": "Creates an account with an email and a password and returns an access token to make authenticated requests",
        "tags": ["Auth", "Signup"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["BAD_REQUEST", "DUPLICATE_EMAIL"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "Returns the access token to make authenticated requests",
        "tags": ["Auth", "Login"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["UNAUTHORIZED"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/check": {
      "get": {
        "description": "Checks if a token is valid and returns the account information",
        "tags": ["Auth", "Check"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["UNAUTHORIZED"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Returns a new access token",
        "tags": ["Auth", "Refresh"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "accountId",
            "description": "Id of the account which requests a new access token",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "body",
            "name": "refreshToken",
            "description": "refreshToken to get the new access token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["BAD_REQUEST"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["UNAUTHORIZED"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/recover-password": {
      "post": {
        "description": "Sends an email to change the password when you forget the credentials",
        "tags": ["Auth", "Recover Password"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "description": "Email to recover the password from",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["email"],
                    "properties": {
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["BAD_REQUEST", "EMAIL_NOT_FOUND"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/new-password": {
      "post": {
        "description": "Changes the password using a token",
        "tags": ["Auth", "New Password"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "emailProviderId",
            "description": "Id of the email requesting the password change",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "token",
            "description": "Token to change the password",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "newPassword",
            "description": "New password to associate with the email provider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["BAD_REQUEST", "INVALID_EMAIL_TOKEN"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/debt": {
      "post": {
        "description": "Creates a new Debt",
        "tags": ["Debt"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "amount",
            "description": "Debt amount",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "body",
            "name": "type",
            "description": "id it a debt or a credit",
            "schema": {
              "type": "string",
              "enum": ["DEBT", "CREDIT"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["BAD_REQUEST"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "enum": ["UNAUTHORIZED"]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
